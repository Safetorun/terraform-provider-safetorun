// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package safetorun

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateApplicationCreateApplicationCreateApplicationResponse includes the requested fields of the GraphQL type CreateApplicationResponse.
type CreateApplicationCreateApplicationCreateApplicationResponse struct {
	ApplicationId string `json:"ApplicationId"`
}

// GetApplicationId returns CreateApplicationCreateApplicationCreateApplicationResponse.ApplicationId, and is useful for accessing the field via an interface.
func (v *CreateApplicationCreateApplicationCreateApplicationResponse) GetApplicationId() string {
	return v.ApplicationId
}

// CreateApplicationResponse is returned by CreateApplication on success.
type CreateApplicationResponse struct {
	CreateApplication CreateApplicationCreateApplicationCreateApplicationResponse `json:"createApplication"`
}

// GetCreateApplication returns CreateApplicationResponse.CreateApplication, and is useful for accessing the field via an interface.
func (v *CreateApplicationResponse) GetCreateApplication() CreateApplicationCreateApplicationCreateApplicationResponse {
	return v.CreateApplication
}

// CreateEventCreateEvent includes the requested fields of the GraphQL type Event.
type CreateEventCreateEvent struct {
	EventId string `json:"EventId"`
	Time    int    `json:"Time"`
	Status  int    `json:"Status"`
}

// GetEventId returns CreateEventCreateEvent.EventId, and is useful for accessing the field via an interface.
func (v *CreateEventCreateEvent) GetEventId() string { return v.EventId }

// GetTime returns CreateEventCreateEvent.Time, and is useful for accessing the field via an interface.
func (v *CreateEventCreateEvent) GetTime() int { return v.Time }

// GetStatus returns CreateEventCreateEvent.Status, and is useful for accessing the field via an interface.
func (v *CreateEventCreateEvent) GetStatus() int { return v.Status }

// CreateEventResponse is returned by CreateEvent on success.
type CreateEventResponse struct {
	CreateEvent CreateEventCreateEvent `json:"createEvent"`
}

// GetCreateEvent returns CreateEventResponse.CreateEvent, and is useful for accessing the field via an interface.
func (v *CreateEventResponse) GetCreateEvent() CreateEventCreateEvent { return v.CreateEvent }

// CreateOrganisationCreateOrganisationOrganisationStatus includes the requested fields of the GraphQL type OrganisationStatus.
type CreateOrganisationCreateOrganisationOrganisationStatus struct {
	OrganisationId string `json:"OrganisationId"`
	Status         int    `json:"Status"`
}

// GetOrganisationId returns CreateOrganisationCreateOrganisationOrganisationStatus.OrganisationId, and is useful for accessing the field via an interface.
func (v *CreateOrganisationCreateOrganisationOrganisationStatus) GetOrganisationId() string {
	return v.OrganisationId
}

// GetStatus returns CreateOrganisationCreateOrganisationOrganisationStatus.Status, and is useful for accessing the field via an interface.
func (v *CreateOrganisationCreateOrganisationOrganisationStatus) GetStatus() int { return v.Status }

// CreateOrganisationResponse is returned by CreateOrganisation on success.
type CreateOrganisationResponse struct {
	CreateOrganisation CreateOrganisationCreateOrganisationOrganisationStatus `json:"createOrganisation"`
}

// GetCreateOrganisation returns CreateOrganisationResponse.CreateOrganisation, and is useful for accessing the field via an interface.
func (v *CreateOrganisationResponse) GetCreateOrganisation() CreateOrganisationCreateOrganisationOrganisationStatus {
	return v.CreateOrganisation
}

// DeleteApplicationDeleteApplicationDeleteApplicationResponse includes the requested fields of the GraphQL type DeleteApplicationResponse.
type DeleteApplicationDeleteApplicationDeleteApplicationResponse struct {
	ApplicationId string `json:"ApplicationId"`
}

// GetApplicationId returns DeleteApplicationDeleteApplicationDeleteApplicationResponse.ApplicationId, and is useful for accessing the field via an interface.
func (v *DeleteApplicationDeleteApplicationDeleteApplicationResponse) GetApplicationId() string {
	return v.ApplicationId
}

// DeleteApplicationResponse is returned by DeleteApplication on success.
type DeleteApplicationResponse struct {
	DeleteApplication DeleteApplicationDeleteApplicationDeleteApplicationResponse `json:"deleteApplication"`
}

// GetDeleteApplication returns DeleteApplicationResponse.DeleteApplication, and is useful for accessing the field via an interface.
func (v *DeleteApplicationResponse) GetDeleteApplication() DeleteApplicationDeleteApplicationDeleteApplicationResponse {
	return v.DeleteApplication
}

// DeleteOrganisationDeleteOrganisationOrganisationStatus includes the requested fields of the GraphQL type OrganisationStatus.
type DeleteOrganisationDeleteOrganisationOrganisationStatus struct {
	OrganisationId string `json:"OrganisationId"`
}

// GetOrganisationId returns DeleteOrganisationDeleteOrganisationOrganisationStatus.OrganisationId, and is useful for accessing the field via an interface.
func (v *DeleteOrganisationDeleteOrganisationOrganisationStatus) GetOrganisationId() string {
	return v.OrganisationId
}

// DeleteOrganisationResponse is returned by DeleteOrganisation on success.
type DeleteOrganisationResponse struct {
	DeleteOrganisation DeleteOrganisationDeleteOrganisationOrganisationStatus `json:"deleteOrganisation"`
}

// GetDeleteOrganisation returns DeleteOrganisationResponse.DeleteOrganisation, and is useful for accessing the field via an interface.
func (v *DeleteOrganisationResponse) GetDeleteOrganisation() DeleteOrganisationDeleteOrganisationOrganisationStatus {
	return v.DeleteOrganisation
}

// GetApplicationGetApplication includes the requested fields of the GraphQL type Application.
type GetApplicationGetApplication struct {
	ApplicationId   string `json:"ApplicationId"`
	ApplicationName string `json:"ApplicationName"`
	ApiKey          string `json:"ApiKey"`
}

// GetApplicationId returns GetApplicationGetApplication.ApplicationId, and is useful for accessing the field via an interface.
func (v *GetApplicationGetApplication) GetApplicationId() string { return v.ApplicationId }

// GetApplicationName returns GetApplicationGetApplication.ApplicationName, and is useful for accessing the field via an interface.
func (v *GetApplicationGetApplication) GetApplicationName() string { return v.ApplicationName }

// GetApiKey returns GetApplicationGetApplication.ApiKey, and is useful for accessing the field via an interface.
func (v *GetApplicationGetApplication) GetApiKey() string { return v.ApiKey }

// GetApplicationResponse is returned by GetApplication on success.
type GetApplicationResponse struct {
	GetApplication GetApplicationGetApplication `json:"getApplication"`
}

// GetGetApplication returns GetApplicationResponse.GetApplication, and is useful for accessing the field via an interface.
func (v *GetApplicationResponse) GetGetApplication() GetApplicationGetApplication {
	return v.GetApplication
}

// GetApplicationsListApplicationsApplicationList includes the requested fields of the GraphQL type ApplicationList.
type GetApplicationsListApplicationsApplicationList struct {
	Items []GetApplicationsListApplicationsApplicationListItemsApplication `json:"items"`
}

// GetItems returns GetApplicationsListApplicationsApplicationList.Items, and is useful for accessing the field via an interface.
func (v *GetApplicationsListApplicationsApplicationList) GetItems() []GetApplicationsListApplicationsApplicationListItemsApplication {
	return v.Items
}

// GetApplicationsListApplicationsApplicationListItemsApplication includes the requested fields of the GraphQL type Application.
type GetApplicationsListApplicationsApplicationListItemsApplication struct {
	ApplicationId   string `json:"ApplicationId"`
	ApplicationName string `json:"ApplicationName"`
	ApiKey          string `json:"ApiKey"`
}

// GetApplicationId returns GetApplicationsListApplicationsApplicationListItemsApplication.ApplicationId, and is useful for accessing the field via an interface.
func (v *GetApplicationsListApplicationsApplicationListItemsApplication) GetApplicationId() string {
	return v.ApplicationId
}

// GetApplicationName returns GetApplicationsListApplicationsApplicationListItemsApplication.ApplicationName, and is useful for accessing the field via an interface.
func (v *GetApplicationsListApplicationsApplicationListItemsApplication) GetApplicationName() string {
	return v.ApplicationName
}

// GetApiKey returns GetApplicationsListApplicationsApplicationListItemsApplication.ApiKey, and is useful for accessing the field via an interface.
func (v *GetApplicationsListApplicationsApplicationListItemsApplication) GetApiKey() string {
	return v.ApiKey
}

// GetApplicationsListEvents includes the requested fields of the GraphQL type Events.
type GetApplicationsListEvents struct {
	Items []GetApplicationsListEventsItemsEvent `json:"items"`
}

// GetItems returns GetApplicationsListEvents.Items, and is useful for accessing the field via an interface.
func (v *GetApplicationsListEvents) GetItems() []GetApplicationsListEventsItemsEvent { return v.Items }

// GetApplicationsListEventsItemsEvent includes the requested fields of the GraphQL type Event.
type GetApplicationsListEventsItemsEvent struct {
	EventId string `json:"EventId"`
	Time    int    `json:"Time"`
}

// GetEventId returns GetApplicationsListEventsItemsEvent.EventId, and is useful for accessing the field via an interface.
func (v *GetApplicationsListEventsItemsEvent) GetEventId() string { return v.EventId }

// GetTime returns GetApplicationsListEventsItemsEvent.Time, and is useful for accessing the field via an interface.
func (v *GetApplicationsListEventsItemsEvent) GetTime() int { return v.Time }

// GetApplicationsResponse is returned by GetApplications on success.
type GetApplicationsResponse struct {
	ListApplications GetApplicationsListApplicationsApplicationList `json:"listApplications"`
	ListEvents       GetApplicationsListEvents                      `json:"listEvents"`
}

// GetListApplications returns GetApplicationsResponse.ListApplications, and is useful for accessing the field via an interface.
func (v *GetApplicationsResponse) GetListApplications() GetApplicationsListApplicationsApplicationList {
	return v.ListApplications
}

// GetListEvents returns GetApplicationsResponse.ListEvents, and is useful for accessing the field via an interface.
func (v *GetApplicationsResponse) GetListEvents() GetApplicationsListEvents { return v.ListEvents }

// GetEventsForLinkIdEventsForLinkIdEvents includes the requested fields of the GraphQL type Events.
type GetEventsForLinkIdEventsForLinkIdEvents struct {
	Items []GetEventsForLinkIdEventsForLinkIdEventsItemsEvent `json:"items"`
}

// GetItems returns GetEventsForLinkIdEventsForLinkIdEvents.Items, and is useful for accessing the field via an interface.
func (v *GetEventsForLinkIdEventsForLinkIdEvents) GetItems() []GetEventsForLinkIdEventsForLinkIdEventsItemsEvent {
	return v.Items
}

// GetEventsForLinkIdEventsForLinkIdEventsItemsEvent includes the requested fields of the GraphQL type Event.
type GetEventsForLinkIdEventsForLinkIdEventsItemsEvent struct {
	EventId string `json:"EventId"`
	Time    int    `json:"Time"`
	Status  int    `json:"Status"`
}

// GetEventId returns GetEventsForLinkIdEventsForLinkIdEventsItemsEvent.EventId, and is useful for accessing the field via an interface.
func (v *GetEventsForLinkIdEventsForLinkIdEventsItemsEvent) GetEventId() string { return v.EventId }

// GetTime returns GetEventsForLinkIdEventsForLinkIdEventsItemsEvent.Time, and is useful for accessing the field via an interface.
func (v *GetEventsForLinkIdEventsForLinkIdEventsItemsEvent) GetTime() int { return v.Time }

// GetStatus returns GetEventsForLinkIdEventsForLinkIdEventsItemsEvent.Status, and is useful for accessing the field via an interface.
func (v *GetEventsForLinkIdEventsForLinkIdEventsItemsEvent) GetStatus() int { return v.Status }

// GetEventsForLinkIdResponse is returned by GetEventsForLinkId on success.
type GetEventsForLinkIdResponse struct {
	EventsForLinkId GetEventsForLinkIdEventsForLinkIdEvents `json:"eventsForLinkId"`
}

// GetEventsForLinkId returns GetEventsForLinkIdResponse.EventsForLinkId, and is useful for accessing the field via an interface.
func (v *GetEventsForLinkIdResponse) GetEventsForLinkId() GetEventsForLinkIdEventsForLinkIdEvents {
	return v.EventsForLinkId
}

// GetForOrganisationIdGetOrganisationStatus includes the requested fields of the GraphQL type OrganisationStatus.
type GetForOrganisationIdGetOrganisationStatus struct {
	OrganisationId string `json:"OrganisationId"`
	Status         int    `json:"Status"`
}

// GetOrganisationId returns GetForOrganisationIdGetOrganisationStatus.OrganisationId, and is useful for accessing the field via an interface.
func (v *GetForOrganisationIdGetOrganisationStatus) GetOrganisationId() string {
	return v.OrganisationId
}

// GetStatus returns GetForOrganisationIdGetOrganisationStatus.Status, and is useful for accessing the field via an interface.
func (v *GetForOrganisationIdGetOrganisationStatus) GetStatus() int { return v.Status }

// GetForOrganisationIdResponse is returned by GetForOrganisationId on success.
type GetForOrganisationIdResponse struct {
	GetOrganisationStatus GetForOrganisationIdGetOrganisationStatus `json:"getOrganisationStatus"`
}

// GetGetOrganisationStatus returns GetForOrganisationIdResponse.GetOrganisationStatus, and is useful for accessing the field via an interface.
func (v *GetForOrganisationIdResponse) GetGetOrganisationStatus() GetForOrganisationIdGetOrganisationStatus {
	return v.GetOrganisationStatus
}

// ListEventsListEvents includes the requested fields of the GraphQL type Events.
type ListEventsListEvents struct {
	Items []ListEventsListEventsItemsEvent `json:"items"`
}

// GetItems returns ListEventsListEvents.Items, and is useful for accessing the field via an interface.
func (v *ListEventsListEvents) GetItems() []ListEventsListEventsItemsEvent { return v.Items }

// ListEventsListEventsItemsEvent includes the requested fields of the GraphQL type Event.
type ListEventsListEventsItemsEvent struct {
	EventId string `json:"EventId"`
	Time    int    `json:"Time"`
}

// GetEventId returns ListEventsListEventsItemsEvent.EventId, and is useful for accessing the field via an interface.
func (v *ListEventsListEventsItemsEvent) GetEventId() string { return v.EventId }

// GetTime returns ListEventsListEventsItemsEvent.Time, and is useful for accessing the field via an interface.
func (v *ListEventsListEventsItemsEvent) GetTime() int { return v.Time }

// ListEventsResponse is returned by ListEvents on success.
type ListEventsResponse struct {
	ListEvents ListEventsListEvents `json:"listEvents"`
}

// GetListEvents returns ListEventsResponse.ListEvents, and is useful for accessing the field via an interface.
func (v *ListEventsResponse) GetListEvents() ListEventsListEvents { return v.ListEvents }

// UpdateApplicationResponse is returned by UpdateApplication on success.
type UpdateApplicationResponse struct {
	UpdateApplication UpdateApplicationUpdateApplicationCreateApplicationResponse `json:"updateApplication"`
}

// GetUpdateApplication returns UpdateApplicationResponse.UpdateApplication, and is useful for accessing the field via an interface.
func (v *UpdateApplicationResponse) GetUpdateApplication() UpdateApplicationUpdateApplicationCreateApplicationResponse {
	return v.UpdateApplication
}

// UpdateApplicationUpdateApplicationCreateApplicationResponse includes the requested fields of the GraphQL type CreateApplicationResponse.
type UpdateApplicationUpdateApplicationCreateApplicationResponse struct {
	ApplicationId string `json:"ApplicationId"`
}

// GetApplicationId returns UpdateApplicationUpdateApplicationCreateApplicationResponse.ApplicationId, and is useful for accessing the field via an interface.
func (v *UpdateApplicationUpdateApplicationCreateApplicationResponse) GetApplicationId() string {
	return v.ApplicationId
}

// __CreateApplicationInput is used internally by genqlient
type __CreateApplicationInput struct {
	OrganisationId  string `json:"organisationId"`
	ApplicationName string `json:"applicationName"`
}

// GetOrganisationId returns __CreateApplicationInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateApplicationInput) GetOrganisationId() string { return v.OrganisationId }

// GetApplicationName returns __CreateApplicationInput.ApplicationName, and is useful for accessing the field via an interface.
func (v *__CreateApplicationInput) GetApplicationName() string { return v.ApplicationName }

// __CreateEventInput is used internally by genqlient
type __CreateEventInput struct {
	Event  string `json:"event"`
	UserId string `json:"userId"`
	Status int    `json:"status"`
	LinkId string `json:"linkId"`
}

// GetEvent returns __CreateEventInput.Event, and is useful for accessing the field via an interface.
func (v *__CreateEventInput) GetEvent() string { return v.Event }

// GetUserId returns __CreateEventInput.UserId, and is useful for accessing the field via an interface.
func (v *__CreateEventInput) GetUserId() string { return v.UserId }

// GetStatus returns __CreateEventInput.Status, and is useful for accessing the field via an interface.
func (v *__CreateEventInput) GetStatus() int { return v.Status }

// GetLinkId returns __CreateEventInput.LinkId, and is useful for accessing the field via an interface.
func (v *__CreateEventInput) GetLinkId() string { return v.LinkId }

// __CreateOrganisationInput is used internally by genqlient
type __CreateOrganisationInput struct {
	AdminEmail       string `json:"adminEmail"`
	OrganisationId   string `json:"organisationId"`
	OrganisationName string `json:"organisationName"`
}

// GetAdminEmail returns __CreateOrganisationInput.AdminEmail, and is useful for accessing the field via an interface.
func (v *__CreateOrganisationInput) GetAdminEmail() string { return v.AdminEmail }

// GetOrganisationId returns __CreateOrganisationInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateOrganisationInput) GetOrganisationId() string { return v.OrganisationId }

// GetOrganisationName returns __CreateOrganisationInput.OrganisationName, and is useful for accessing the field via an interface.
func (v *__CreateOrganisationInput) GetOrganisationName() string { return v.OrganisationName }

// __DeleteApplicationInput is used internally by genqlient
type __DeleteApplicationInput struct {
	OrganisationId string `json:"organisationId"`
	ApplicationId  string `json:"applicationId"`
}

// GetOrganisationId returns __DeleteApplicationInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__DeleteApplicationInput) GetOrganisationId() string { return v.OrganisationId }

// GetApplicationId returns __DeleteApplicationInput.ApplicationId, and is useful for accessing the field via an interface.
func (v *__DeleteApplicationInput) GetApplicationId() string { return v.ApplicationId }

// __DeleteOrganisationInput is used internally by genqlient
type __DeleteOrganisationInput struct {
	OrganisationId string `json:"organisationId"`
}

// GetOrganisationId returns __DeleteOrganisationInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__DeleteOrganisationInput) GetOrganisationId() string { return v.OrganisationId }

// __GetApplicationInput is used internally by genqlient
type __GetApplicationInput struct {
	OrganisationId string `json:"organisationId"`
	ApplicationId  string `json:"applicationId"`
}

// GetOrganisationId returns __GetApplicationInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetApplicationInput) GetOrganisationId() string { return v.OrganisationId }

// GetApplicationId returns __GetApplicationInput.ApplicationId, and is useful for accessing the field via an interface.
func (v *__GetApplicationInput) GetApplicationId() string { return v.ApplicationId }

// __GetApplicationsInput is used internally by genqlient
type __GetApplicationsInput struct {
	OrganisationId string `json:"organisationId"`
}

// GetOrganisationId returns __GetApplicationsInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetApplicationsInput) GetOrganisationId() string { return v.OrganisationId }

// __GetEventsForLinkIdInput is used internally by genqlient
type __GetEventsForLinkIdInput struct {
	LinkId string `json:"linkId"`
}

// GetLinkId returns __GetEventsForLinkIdInput.LinkId, and is useful for accessing the field via an interface.
func (v *__GetEventsForLinkIdInput) GetLinkId() string { return v.LinkId }

// __GetForOrganisationIdInput is used internally by genqlient
type __GetForOrganisationIdInput struct {
	OrganisationId string `json:"organisationId"`
}

// GetOrganisationId returns __GetForOrganisationIdInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetForOrganisationIdInput) GetOrganisationId() string { return v.OrganisationId }

// __UpdateApplicationInput is used internally by genqlient
type __UpdateApplicationInput struct {
	OrganisationId  string `json:"organisationId"`
	ApplicationId   string `json:"applicationId"`
	ApplicationName string `json:"applicationName"`
}

// GetOrganisationId returns __UpdateApplicationInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__UpdateApplicationInput) GetOrganisationId() string { return v.OrganisationId }

// GetApplicationId returns __UpdateApplicationInput.ApplicationId, and is useful for accessing the field via an interface.
func (v *__UpdateApplicationInput) GetApplicationId() string { return v.ApplicationId }

// GetApplicationName returns __UpdateApplicationInput.ApplicationName, and is useful for accessing the field via an interface.
func (v *__UpdateApplicationInput) GetApplicationName() string { return v.ApplicationName }

func CreateApplication(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
	applicationName string,
) (*CreateApplicationResponse, error) {
	req := &graphql.Request{
		OpName: "CreateApplication",
		Query: `
mutation CreateApplication ($organisationId: String!, $applicationName: String!) {
	createApplication(input: {ApplicationName:$applicationName}, organisationId: $organisationId) {
		ApplicationId
	}
}
`,
		Variables: &__CreateApplicationInput{
			OrganisationId:  organisationId,
			ApplicationName: applicationName,
		},
	}
	var err error

	var data CreateApplicationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateEvent(
	ctx context.Context,
	client graphql.Client,
	event string,
	userId string,
	status int,
	linkId string,
) (*CreateEventResponse, error) {
	req := &graphql.Request{
		OpName: "CreateEvent",
		Query: `
mutation CreateEvent ($event: String!, $userId: String!, $status: Int!, $linkId: String!) {
	createEvent(event: $event, userId: $userId, status: $status, linkId: $linkId) {
		EventId
		Time
		Status
	}
}
`,
		Variables: &__CreateEventInput{
			Event:  event,
			UserId: userId,
			Status: status,
			LinkId: linkId,
		},
	}
	var err error

	var data CreateEventResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateOrganisation(
	ctx context.Context,
	client graphql.Client,
	adminEmail string,
	organisationId string,
	organisationName string,
) (*CreateOrganisationResponse, error) {
	req := &graphql.Request{
		OpName: "CreateOrganisation",
		Query: `
mutation CreateOrganisation ($adminEmail: String!, $organisationId: String!, $organisationName: String!) {
	createOrganisation(adminEmail: $adminEmail, organisationId: $organisationId, organisationName: $organisationName) {
		OrganisationId
		Status
	}
}
`,
		Variables: &__CreateOrganisationInput{
			AdminEmail:       adminEmail,
			OrganisationId:   organisationId,
			OrganisationName: organisationName,
		},
	}
	var err error

	var data CreateOrganisationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteApplication(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
	applicationId string,
) (*DeleteApplicationResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteApplication",
		Query: `
mutation DeleteApplication ($organisationId: String!, $applicationId: String!) {
	deleteApplication(organisationId: $organisationId, applicationId: $applicationId) {
		ApplicationId
	}
}
`,
		Variables: &__DeleteApplicationInput{
			OrganisationId: organisationId,
			ApplicationId:  applicationId,
		},
	}
	var err error

	var data DeleteApplicationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteOrganisation(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
) (*DeleteOrganisationResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteOrganisation",
		Query: `
mutation DeleteOrganisation ($organisationId: String!) {
	deleteOrganisation(organisationId: $organisationId) {
		OrganisationId
	}
}
`,
		Variables: &__DeleteOrganisationInput{
			OrganisationId: organisationId,
		},
	}
	var err error

	var data DeleteOrganisationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetApplication(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
	applicationId string,
) (*GetApplicationResponse, error) {
	req := &graphql.Request{
		OpName: "GetApplication",
		Query: `
query GetApplication ($organisationId: String!, $applicationId: String!) {
	getApplication(applicationId: $applicationId, organisationId: $organisationId) {
		ApplicationId
		ApplicationName
		ApiKey
	}
}
`,
		Variables: &__GetApplicationInput{
			OrganisationId: organisationId,
			ApplicationId:  applicationId,
		},
	}
	var err error

	var data GetApplicationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetApplications(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
) (*GetApplicationsResponse, error) {
	req := &graphql.Request{
		OpName: "GetApplications",
		Query: `
query GetApplications ($organisationId: String!) {
	listApplications(organisationId: $organisationId) {
		items {
			ApplicationId
			ApplicationName
			ApiKey
		}
	}
	listEvents {
		items {
			EventId
			Time
		}
	}
}
`,
		Variables: &__GetApplicationsInput{
			OrganisationId: organisationId,
		},
	}
	var err error

	var data GetApplicationsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetEventsForLinkId(
	ctx context.Context,
	client graphql.Client,
	linkId string,
) (*GetEventsForLinkIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetEventsForLinkId",
		Query: `
query GetEventsForLinkId ($linkId: String!) {
	eventsForLinkId(linkId: $linkId) {
		items {
			EventId
			Time
			Status
		}
	}
}
`,
		Variables: &__GetEventsForLinkIdInput{
			LinkId: linkId,
		},
	}
	var err error

	var data GetEventsForLinkIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetForOrganisationId(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
) (*GetForOrganisationIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetForOrganisationId",
		Query: `
query GetForOrganisationId ($organisationId: String!) {
	getOrganisationStatus(organisationId: $organisationId) {
		OrganisationId
		Status
	}
}
`,
		Variables: &__GetForOrganisationIdInput{
			OrganisationId: organisationId,
		},
	}
	var err error

	var data GetForOrganisationIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListEvents(
	ctx context.Context,
	client graphql.Client,
) (*ListEventsResponse, error) {
	req := &graphql.Request{
		OpName: "ListEvents",
		Query: `
query ListEvents {
	listEvents {
		items {
			EventId
			Time
		}
	}
}
`,
	}
	var err error

	var data ListEventsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateApplication(
	ctx context.Context,
	client graphql.Client,
	organisationId string,
	applicationId string,
	applicationName string,
) (*UpdateApplicationResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateApplication",
		Query: `
mutation UpdateApplication ($organisationId: String!, $applicationId: String!, $applicationName: String!) {
	updateApplication(organisationId: $organisationId, applicationId: $applicationId, input: {ApplicationName:$applicationName}) {
		ApplicationId
	}
}
`,
		Variables: &__UpdateApplicationInput{
			OrganisationId:  organisationId,
			ApplicationId:   applicationId,
			ApplicationName: applicationName,
		},
	}
	var err error

	var data UpdateApplicationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
